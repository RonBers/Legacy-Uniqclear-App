/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package customerSearchPackage;


import customerPackage.createCustomerPage;

//import java.awt.Color;
import connectionSql.mysqlConnection;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ronjoshual.bersabal
 */
public class customerOrder extends javax.swing.JDialog {

    /**
     * Creates new form customerOrder
     */
    Connection con = new mysqlConnection().getCon(); 
    public String parentName,custID;
    public String customerName, customerContact;
    public customerOrder(java.awt.Frame parent, boolean modal, String parentName) {
        super(parent, modal);
        initComponents();
        this.parentName = parentName;
        createKeybindings(customerTable);
    }
    
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        headerlogo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        custSearchBox = new javax.swing.JTextField();
        selectCustomer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addNew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        headerlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uniqclearLogo(header).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(headerlogo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(headerlogo)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Last Name", "First Name", "Middle Name", "Contact No.", "Type", "Points"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerTableKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        custSearchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custSearchBoxKeyTyped(evt);
            }
        });

        selectCustomer.setBackground(new java.awt.Color(40, 75, 135));
        selectCustomer.setForeground(new java.awt.Color(255, 255, 255));
        selectCustomer.setText("Select Customer");
        selectCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCustomerActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Search customer:");

        addNew.setBackground(new java.awt.Color(40, 75, 135));
        addNew.setForeground(new java.awt.Color(255, 255, 255));
        addNew.setText("Add New Customer");
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(custSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(selectCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(custSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(40, 40, 40))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String sql = "SELECT customer_id, last_name, first_name , middle_name, contact_num, customer_type FROM customer";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
            
            while(rs.next()){
                model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3), rs.getString(4),rs.getString(5), rs.getString(6)});
            }
        }catch(Exception ex){
            System.out.println("Error: "+ex.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void custSearchBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custSearchBoxKeyTyped
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) customerTable.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + custSearchBox.getText()));
        customerTable.setRowSorter(sorter);
    }//GEN-LAST:event_custSearchBoxKeyTyped

    private void selectCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCustomerActionPerformed
        // TODO add your handling code here:
        
       if (parentName.equals("orders")){
            int idColumn = 0;
            int idRow = customerTable.getSelectedRow();


            
            String custFirstName = customerTable.getModel().getValueAt(idRow,2).toString();
            String custLastName = customerTable.getModel().getValueAt(idRow,1).toString();
            String custMiddleName = customerTable.getModel().getValueAt(idRow,3).toString();
            String custContact = customerTable.getModel().getValueAt(idRow,4).toString();

            customerName = custLastName+", "+custFirstName+" "+custMiddleName;
            customerContact = custContact; 
            custID = customerTable.getModel().getValueAt(idRow,idColumn).toString();
            
            
       }else if(parentName.equals("contracts")){
           int idColumn = 0;
           int idRow = customerTable.getSelectedRow();
           custID = customerTable.getModel().getValueAt(idRow,idColumn).toString();
           //customerName = 
       }
       
      //order.revalidate();
       
       this.dispose();
      
        
    }//GEN-LAST:event_selectCustomerActionPerformed

    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
        createCustomerPage newCustomer = new createCustomerPage(new javax.swing.JFrame(), true);
        newCustomer.setVisible(true);
        newCustomer.addWindowListener(new WindowAdapter(){
            public void windowClosed(WindowEvent e)
            {
              System.out.println("jdialog window closed event received");
              model.setRowCount(0);
              String sql = "SELECT customer_id, first_name, last_name, middle_name, contact_num ,customer_type FROM customer";
                try{
                    //DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
                    PreparedStatement pst = con.prepareStatement(sql);
                    ResultSet rs = pst.executeQuery();
                   

                    while(rs.next()){
                        model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3), rs.getString(4),rs.getString(5), rs.getString(6)});
                    }
                }catch(Exception ex){
                    System.out.println("Error: "+ex.getMessage());
                }
            }
          });
        //new createCustomerPage(new javax.swing.JFrame(),true).setVisible(true);
       
    }//GEN-LAST:event_addNewActionPerformed

    private void customerTableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerTableKeyTyped
        // TODO add your handling code here:
         
    }//GEN-LAST:event_customerTableKeyTyped

    
    
     private void createKeybindings(JTable table) {
        table.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "Enter");
        table.getActionMap().put("Enter", new AbstractAction() {
        @Override
            public void actionPerformed(ActionEvent ae) {
            if (parentName.equals("orders")){
            int idColumn = 0;
            int idRow = customerTable.getSelectedRow();


            
            String custFirstName = customerTable.getModel().getValueAt(idRow,2).toString();
            String custLastName = customerTable.getModel().getValueAt(idRow,1).toString();
            String custMiddleName = customerTable.getModel().getValueAt(idRow,3).toString();
            String custContact = customerTable.getModel().getValueAt(idRow,4).toString();

            customerName = custLastName+", "+custFirstName+" "+custMiddleName;
            customerContact = custContact; 
            custID = customerTable.getModel().getValueAt(idRow,idColumn).toString();
            
            
       }else if(parentName.equals("contracts")){
           int idColumn = 0;
           int idRow = customerTable.getSelectedRow();
           custID = customerTable.getModel().getValueAt(idRow,idColumn).toString();
           //customerName = 
       }
       
                //order.revalidate();
       
            exitFrame();
        }
        });
     }
     
     public void exitFrame(){
         this.dispose();
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                customerOrder dialog = new customerOrder(new javax.swing.JFrame(), true, "");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNew;
    private javax.swing.JTextField custSearchBox;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel headerlogo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton selectCustomer;
    // End of variables declaration//GEN-END:variables
}
