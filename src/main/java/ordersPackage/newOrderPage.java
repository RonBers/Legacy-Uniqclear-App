/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ordersPackage;
import connectionSql.mysqlConnection;
import customerSearchPackage.customerOrder;
//import com.uniqclear.uniqclearapp.ordersPackage.orderAdjustments;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author User
 */
public class newOrderPage extends javax.swing.JFrame {

    /**
     * Creates new form newOrderPage
     */
    
    public double price = 0, subtotal = 0, total = 0,fees=0,discount=0, deliveryFee=0, numDeli=5;
    public int newBottlesQuantity;
    public String itemOne;
    public String customerID, customerName, customerContact, points;
    
    
    
    ArrayList<String> itemsList = new ArrayList();
    public boolean adjustedOpened;//, forDelivery;//tenPlusOne = false;
    public HashMap<String, Double> feesTable = new HashMap<String, Double>(); 
    public HashMap<String, Double> discountsTable = new HashMap<String,Double>();
    
    Connection con = new mysqlConnection().getCon();
    
    public newOrderPage() {
        initComponents();
        tableDesign();
        getContentPane().setBackground(Color.white);
        this.setTitle("New Order");
        getItemList();
    }
    //boolean clicked = false;
    
    /*
    public boolean ifClicked(){
        if (clicked == false){
            clicked =true;
            return false;
        }else {
            return clicked;
        }
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderType = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        title1 = new javax.swing.JLabel();
        customerInfoPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        moreDetails = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        customerIDLabel = new javax.swing.JLabel();
        contactNum = new javax.swing.JLabel();
        custPoints = new javax.swing.JLabel();
        custName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        totalAmount = new javax.swing.JLabel();
        subTotalDisplay = new javax.swing.JLabel();
        feesTotal = new javax.swing.JLabel();
        discountsTotal = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        adjustments = new javax.swing.JButton();
        forDeliveryButton = new javax.swing.JRadioButton();
        forWalkInButton = new javax.swing.JRadioButton();
        confirmButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        newBottles = new javax.swing.JLabel();
        item1 = new javax.swing.JComboBox<>();
        quantity1 = new javax.swing.JSpinner();
        addItem = new javax.swing.JButton();
        removeItem = new javax.swing.JButton();
        searchCustomer = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addPayment = new javax.swing.JButton();
        logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Order");
        setMinimumSize(new java.awt.Dimension(1026, 826));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uniqclearLogo(header).png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(421, 421, 421))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(1400, 900));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        title1.setText("Create New Order");
        jPanel5.add(title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 48, 225, -1));

        customerInfoPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel10.setText("Customer Information");

        jLabel16.setText("Customer ID: ");

        jLabel17.setText("Name: ");

        jLabel18.setText("Points: ");

        moreDetails.setBackground(new java.awt.Color(40, 75, 135));
        moreDetails.setForeground(new java.awt.Color(255, 255, 255));
        moreDetails.setText("View More");

        jLabel22.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N

        jLabel20.setText("Contact No.");

        javax.swing.GroupLayout customerInfoPanelLayout = new javax.swing.GroupLayout(customerInfoPanel);
        customerInfoPanel.setLayout(customerInfoPanelLayout);
        customerInfoPanelLayout.setHorizontalGroup(
            customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(customerInfoPanelLayout.createSequentialGroup()
                        .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20))
                        .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel22)
                                .addGap(22, 22, 22))
                            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(customerInfoPanelLayout.createSequentialGroup()
                                        .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(custName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(custPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(contactNum, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, customerInfoPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel19)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(customerInfoPanelLayout.createSequentialGroup()
                        .addComponent(moreDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                        .addGap(391, 391, 391))))
            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerInfoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(185, 185, 185))
        );
        customerInfoPanelLayout.setVerticalGroup(
            customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(customerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(custName)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(custPoints))
                .addGap(15, 15, 15)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(contactNum))
                .addGap(25, 25, 25)
                .addComponent(moreDetails)
                .addGap(18, 18, 18)
                .addComponent(jLabel19))
        );

        jPanel5.add(customerInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(611, 230, 550, -1));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel11.setText("Subtotal:");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel12.setText("Fees:");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel13.setText("Discount:");

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel14.setText("Total Amount:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Php");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Php");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Php");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Php");

        totalAmount.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        subTotalDisplay.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        feesTotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        discountsTotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(feesTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(subTotalDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(discountsTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 311, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(totalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
            .addComponent(jSeparator3)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6)
                    .addComponent(subTotalDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel7)
                    .addComponent(feesTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(discountsTotal)))
                .addGap(17, 17, 17)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalAmount)
                        .addComponent(jLabel9)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 379, 590, -1));

        homeButton.setBackground(new java.awt.Color(40, 75, 135));
        homeButton.setForeground(new java.awt.Color(255, 255, 255));
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        jPanel5.add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 15, -1, -1));

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Quantity", "Price", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(itemsTable);

        adjustments.setBackground(new java.awt.Color(40, 75, 135));
        adjustments.setForeground(new java.awt.Color(255, 255, 255));
        adjustments.setText("Adjustments");
        adjustments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjustmentsActionPerformed(evt);
            }
        });

        orderType.add(forDeliveryButton);
        forDeliveryButton.setText("Delivery");
        forDeliveryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forDeliveryButtonActionPerformed(evt);
            }
        });

        orderType.add(forWalkInButton);
        forWalkInButton.setText("Walk-in");
        forWalkInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forWalkInButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(adjustments, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(196, 196, 196)
                .addComponent(forDeliveryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(forWalkInButton)
                .addGap(28, 28, 28))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adjustments)
                    .addComponent(forDeliveryButton)
                    .addComponent(forWalkInButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 198, 600, -1));

        confirmButton.setBackground(new java.awt.Color(40, 75, 135));
        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        jPanel5.add(confirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 510, 150, 51));

        jPanel2.setBackground(new java.awt.Color(255, 192, 0));

        title.setText("Customer");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(437, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title)
                .addContainerGap())
        );

        jPanel5.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(611, 198, 550, -1));

        jLabel2.setText("Water Bottles in Stock: ");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 490, -1, -1));

        newBottles.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newBottles.setText("n");
        jPanel5.add(newBottles, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 490, 219, -1));

        item1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item1ActionPerformed(evt);
            }
        });
        jPanel5.add(item1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 156, 270, 36));

        quantity1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        quantity1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantity1StateChanged(evt);
            }
        });
        jPanel5.add(quantity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, -1, 30));

        addItem.setBackground(new java.awt.Color(40, 75, 135));
        addItem.setForeground(new java.awt.Color(255, 255, 255));
        addItem.setText("Add Item");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });
        jPanel5.add(addItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 121, 40));

        removeItem.setBackground(new java.awt.Color(190, 0, 0));
        removeItem.setForeground(new java.awt.Color(255, 255, 255));
        removeItem.setText("Remove Item");
        removeItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemActionPerformed(evt);
            }
        });
        jPanel5.add(removeItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 124, 40));

        searchCustomer.setBackground(new java.awt.Color(40, 75, 135));
        searchCustomer.setForeground(new java.awt.Color(255, 255, 255));
        searchCustomer.setText("Select Customer");
        searchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerActionPerformed(evt);
            }
        });
        jPanel5.add(searchCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(921, 156, 240, 35));

        jLabel3.setText("Select Item:");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 133, 263, -1));

        jLabel4.setText("Quantity:");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 133, 154, -1));

        addPayment.setBackground(new java.awt.Color(40, 75, 135));
        addPayment.setForeground(new java.awt.Color(255, 255, 255));
        addPayment.setText("Pay");
        addPayment.setEnabled(false);
        addPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPaymentActionPerformed(evt);
            }
        });
        jPanel5.add(addPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 510, 130, 51));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uniqclearLogo.png"))); // NOI18N
        jPanel5.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(869, 15, -1, -1));

        jScrollPane1.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void getItemList(){
        String sql = "SELECT item_name FROM item ORDER BY item_id LIMIT 3;";
         try{
                    //DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
                    PreparedStatement pst = con.prepareStatement(sql);
                    ResultSet rs = pst.executeQuery();
                   

                    while(rs.next()){
                        //String priceTable = rs.getString("item_price");
                        String itemTemp = rs.getString("item_name"); 
                        item1.addItem(itemTemp);
                        itemsList.add(itemTemp);
                    }
     
                }catch(Exception ex){
                    System.out.println("Error: "+ex.getMessage());
                }
    }
    private void adjustmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjustmentsActionPerformed
        // TODO add your handling code here:
        orderAdjustments discAddFee = new orderAdjustments(this,true);
        discAddFee.deliveryFee = this.deliveryFee;
        
        if (!feesTable.isEmpty()){
            discAddFee.setActives(feesTable, null); 
        }
        
        if (!discountsTable.isEmpty()){
            discAddFee.setActives(null, discountsTable);
        }
        
        
        
        discAddFee.setVisible(true);
        discAddFee.addWindowListener(new WindowAdapter(){
            public void windowClosed(WindowEvent e)
            {
           
                
                if (!discAddFee.cancelPressed){
                    fees=discAddFee.feesTotal;
                     discount = discAddFee.discountsTotal;
                }
                
              
                feesTable.clear();
                discountsTable.clear();
                feesTable.putAll(discAddFee.feesTableValues);
                discountsTable.putAll(discAddFee.discountTableValues);
                subTotalCalc();
            }
          });
        
    }//GEN-LAST:event_adjustmentsActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_homeButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        //perform save of form content/input
        String orderType = (forDeliveryButton.isSelected())?"'Delivery'":"'Walk-in'";
        String orderStatus = "'Pending'";
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();  
        String cTempId = "'"+customerIDLabel.getText().trim()+"'";
        String date = "'"+dtf.format(now)+"'";
        String amount = "'"+totalAmount.getText().trim()+"'";
        
        
        String sql = "INSERT INTO orders (customer_id, order_type, order_status, order_date_time, branch_id, amount) VALUES ("+cTempId+","+orderType+","+orderStatus+","+date+",3, "+amount+");";  
        
        try{
                PreparedStatement pst = con.prepareStatement(sql);
                pst.executeUpdate();
            }catch(Exception ex){
                System.out.println("Error: "+ex.getMessage());
            }
        
        
        feesTable.clear();
        discountsTable.clear();    
        JOptionPane.showMessageDialog(this, "Added a new Order", "Message", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
        
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void searchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerActionPerformed
        // TODO add your handling code here:
        
        customerOrder searchCust = new customerOrder (this,true, "orders");
        searchCust.setVisible(true);
        searchCust.addWindowListener(new WindowAdapter(){
            public void windowClosed(WindowEvent e)
            {
            //  model.setRowCount(0);
              customerName = searchCust.customerName;
              customerContact = searchCust.customerContact;
              custName.setText(customerName);
              contactNum.setText(customerContact);
              customerIDLabel.setText(searchCust.custID);
            }
          });
        
        if (itemsTable.getRowCount() != 0){
            addPayment.setEnabled(true);
        }
    }//GEN-LAST:event_searchCustomerActionPerformed
    
    public double getPrice(String item){
        double selectedItemPrice = 0;
        String sql = "SELECT item_price FROM item WHERE item_name LIKE('"+item+"');";
         try{
                    PreparedStatement pst = con.prepareStatement(sql);
                    ResultSet rs = pst.executeQuery();
                   

                    while(rs.next()){
                        selectedItemPrice = rs.getDouble("item_price");
                    }
     
                }catch(Exception ex){
                    System.out.println("Error: "+ex.getMessage());
                }
        return selectedItemPrice;
    }
    private void item1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item1ActionPerformed
        // TODO add your handling code here:
        quantity1.setValue(0);
        itemOne = item1.getSelectedItem().toString();
         if (itemOne.equalsIgnoreCase("new water bottle")){
           SpinnerModel value =  new SpinnerNumberModel(0,0,Integer.parseInt(newBottles.getText()),1);  
            quantity1.setModel(value);
        }else{
             SpinnerModel value =  new SpinnerNumberModel(0,0,null,1);  
             quantity1.setModel(value);
         }
            
        
    }//GEN-LAST:event_item1ActionPerformed

    private void quantity1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantity1StateChanged
       if ((Integer)quantity1.getValue() > newBottlesQuantity ){
           quantity1.setValue(newBottlesQuantity);
       }
    }//GEN-LAST:event_quantity1StateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String sql = "SELECT non_rental_item.item_quantity FROM non_rental_item JOIN item ON item.item_id=non_rental_item.item_id WHERE item.item_name LIKE ('New Water Bottle');";
        
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                
                String num = rs.getString("item_quantity");
                newBottles.setText(num);
                newBottlesQuantity = Integer.parseInt(num);
            }
            
        }catch(Exception ex){
            System.out.println("Error: "+ ex.getMessage());
        }
        
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
       
        /*forDeliveryButton.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    if (deliveryFee == 0){
                        int numDeli = 5;
                        int quantity = 0;
                        for (int row = 0; row < model.getRowCount(); row++) {
                            String item = model.getValueAt(row, 0).toString();
                                if (item.equalsIgnoreCase("refill")||item.equalsIgnoreCase("new water bottle")){
                                    quantity += Integer.parseInt(model.getValueAt(row, 1).toString());
                                }
                        }
                        deliveryFee = quantity*numDeli;
                        fees = fees +deliveryFee;
                    }else{
                        fees -= deliveryFee;
                    }
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    fees -= deliveryFee;
                    deliveryFee = 0;
                    subTotalCalc();
                }
            }
        });*/
    }//GEN-LAST:event_formWindowOpened

    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
        String itemName =item1.getSelectedItem().toString();
        boolean itemExists = false;
        for (int row = 0; row < model.getRowCount(); row++) {
            String existingItems = model.getValueAt(row, 0).toString();
            if (existingItems.equals(itemName)){
                itemExists = true;
            }
        }
         
         
        if (!itemExists){
            int itemQuantity = (Integer)quantity1.getValue();
            if (itemQuantity > 0){
                String sql = "SELECT item_price FROM item WHERE item_name LIKE '"+itemName+"';";
                double tempPrice = 0;
                try{
                    PreparedStatement pst = con.prepareStatement(sql);
                    ResultSet rs = pst.executeQuery();

                    while(rs.next()){
                        tempPrice = rs.getDouble("item_price");
                    }
                }catch (Exception ex){
                    System.out.println("Error: "+ex.getMessage());
                }

                model.addRow(new String[]{itemName,Integer.toString(itemQuantity),Double.toString(tempPrice)+0,Double.toString(tempPrice*itemQuantity)+0});
                if ((itemName.equalsIgnoreCase("refill") || itemName.equalsIgnoreCase("new water bottle"))&& forDeliveryButton.isSelected()){
                    double tempDelivery = itemQuantity*5;
                    deliveryFee += tempDelivery;
                    fees += tempDelivery;
                }
                subTotalCalc();
            }else{
                 JOptionPane.showMessageDialog(this, "Error: Item quantity should be greater than zero (0)!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Item "+ itemName+" already exists!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        alignValues();
        
        
       
    }//GEN-LAST:event_addItemActionPerformed

    private void removeItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
        if (itemsTable.getSelectedRow() != -1) {
            int row = itemsTable.getSelectedRow();
            String item = model.getValueAt(row, 0).toString();
            int itemQuantity = Integer.parseInt(model.getValueAt(row, 1).toString());
            if (item.equalsIgnoreCase("refill") || item.equalsIgnoreCase("new water bottle")){
                double tempDelivery = itemQuantity * 5;
                deliveryFee -= tempDelivery;
                fees -= tempDelivery;
                if (model.getRowCount() == 0){
                     forDeliveryButton.setSelected(false);
                }
            }
            
            model.removeRow(row);
        }
        
        if (itemsTable.getRowCount()==0){
            addPayment.setEnabled(false);
            fees = 0;
            subtotal = 0;
            discount = 0;
            total = 0;
            deliveryFee = 0;
            forDeliveryButton.setSelected(false);
        }
        subTotalCalc();
    }//GEN-LAST:event_removeItemActionPerformed

    private void addPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPaymentActionPerformed
        // TODO add your handling code here:
        paymentWindow addPayment = new paymentWindow(this, true);
        DefaultTableModel items= (DefaultTableModel)itemsTable.getModel(); 
        DefaultTableModel invoiceTable = (DefaultTableModel)addPayment.invoice.getModel();
         for (int row = 0; row < items.getRowCount(); row++) {
            Object rowItem = items.getValueAt(row, 0);
            Object rowQuantity = items.getValueAt(row, 1);
            Object rowAmount = items.getValueAt(row,3);
            
            invoiceTable.addRow(new Object[]{rowItem,rowQuantity,rowAmount});
            
        }
         
         //subtotal, total,fees,discount, deliveryFee,customFee,customDiscount;
       
        addPayment.total = total;
        addPayment.subtotalAmount.setText(String.format("%.2f", subtotal));
        addPayment.discountAmount.setText(String.format("%.2f", discount));
        addPayment.feesAmount.setText(String.format("%.2f", fees));
        addPayment.totalAmount.setText(String.format("%.2f", total));
        addPayment.customerName.setText(custName.getText());  
        addPayment.setVisible(true);
        
    }//GEN-LAST:event_addPaymentActionPerformed

    private void forDeliveryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forDeliveryButtonActionPerformed
        if(forDeliveryButton.isSelected()){
            subTotalCalc();  
        }
    }//GEN-LAST:event_forDeliveryButtonActionPerformed

    private void forWalkInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forWalkInButtonActionPerformed
        if (forWalkInButton.isSelected()){
            fees -= deliveryFee;
            deliveryFee = 0;
            subTotalCalc();
        }
    }//GEN-LAST:event_forWalkInButtonActionPerformed
    public void subTotalCalc(){
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
        subtotal = 0;
         for (int row = 0; row < model.getRowCount(); row++) {
            Object rowData = model.getValueAt(row, 3);
            
            subtotal= subtotal + Double.parseDouble(rowData.toString());
        }
         
       
         if (forDeliveryButton.isSelected()){
            int tempQuantity = 0;
            if (itemsTable.getRowCount() > 0){
                for(int i = 0; i<itemsTable.getRowCount();i++){
                    String tempItem = itemsTable.getValueAt(i,0).toString();
                    
                    if (tempItem.equalsIgnoreCase("Refill") || tempItem.equalsIgnoreCase("New Water Bottle")){
                       tempQuantity += Integer.parseInt(itemsTable.getValueAt(i,1).toString());
                    }
                } 
              
            }
            
           
            if (deliveryFee > 0 ){
                fees -= deliveryFee;
            }
            
           
            deliveryFee = tempQuantity * 5;
            fees += deliveryFee;
         }
         
        subTotalDisplay.setText(String.format("%.2f", subtotal));   
        feesTotal.setText(String.format("%.2f",fees));
        discountsTotal.setText(String.format("%.2f", discount));
        total = (subtotal+fees)-discount;
        totalAmount.setText(String.format("%.2f",(subtotal+fees)- Double.parseDouble(discountsTotal.getText())));
    }
    
    
    public void alignValues(){
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
        DefaultTableCellRenderer rightAlign = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centerAlign = new DefaultTableCellRenderer();
        
        
        
        centerAlign.setHorizontalAlignment(JLabel.CENTER);
        itemsTable.getColumnModel().getColumn(1).setCellRenderer(centerAlign);
        rightAlign.setHorizontalAlignment(JLabel.RIGHT);
        for (int i = 2; i<= 3;i++)
        {
            itemsTable.getColumnModel().getColumn(i).setCellRenderer(rightAlign);
        }
    }
    
    public void tableDesign(){
        itemsTable.getTableHeader().setOpaque(false);
        itemsTable.getTableHeader().setBackground(new Color(255,192,0));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newOrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newOrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newOrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newOrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newOrderPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItem;
    private javax.swing.JButton addPayment;
    private javax.swing.JButton adjustments;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel contactNum;
    private javax.swing.JLabel custName;
    private javax.swing.JLabel custPoints;
    private javax.swing.JLabel customerIDLabel;
    public javax.swing.JPanel customerInfoPanel;
    private javax.swing.JLabel discountsTotal;
    private javax.swing.JLabel feesTotal;
    private javax.swing.JRadioButton forDeliveryButton;
    private javax.swing.JRadioButton forWalkInButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JComboBox<String> item1;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel logo;
    private javax.swing.JButton moreDetails;
    public javax.swing.JLabel newBottles;
    private javax.swing.ButtonGroup orderType;
    private javax.swing.JSpinner quantity1;
    private javax.swing.JButton removeItem;
    private javax.swing.JButton searchCustomer;
    private javax.swing.JLabel subTotalDisplay;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel totalAmount;
    // End of variables declaration//GEN-END:variables
}
