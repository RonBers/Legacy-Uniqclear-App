/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package contractsPackage;

import connectionSql.mysqlConnection;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import searchPackage.customerSearch;

/**
 *
 * @author User
 */
public class addContract extends javax.swing.JFrame {

    /**
     * Creates new form addContract
     */
    Connection con = new mysqlConnection().getCon();
    public String customerID;
    public addContract() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        selectCustomer = new javax.swing.JButton();
        customerName = new javax.swing.JTextField();
        contractLink = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        contractDate = new com.toedter.calendar.JDateChooser();
        ContractTypeLabel1 = new javax.swing.JLabel();
        typeRentalContract = new javax.swing.JRadioButton();
        typeDealerContract = new javax.swing.JRadioButton();
        ContractTypeLabel2 = new javax.swing.JLabel();
        minRefills = new javax.swing.JSpinner();
        ContractTypeLabel3 = new javax.swing.JLabel();
        ContractTypeLabel = new javax.swing.JLabel();
        addFee = new javax.swing.JSpinner();
        discount = new javax.swing.JSpinner();
        addContract = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(310, 100));

        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uniqclearLogo(header).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header)
                .addGap(0, 61, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        selectCustomer.setBackground(new java.awt.Color(40, 75, 135));
        selectCustomer.setForeground(new java.awt.Color(255, 255, 255));
        selectCustomer.setText("Select Customer");
        selectCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCustomerActionPerformed(evt);
            }
        });

        customerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameActionPerformed(evt);
            }
        });

        contractLink.setMaximumSize(new java.awt.Dimension(68, 26));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setText("Contract Link:");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5.setText("Date:");

        ContractTypeLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ContractTypeLabel1.setText("Contract Type");

        buttonGroup1.add(typeRentalContract);
        typeRentalContract.setText("Rental");
        typeRentalContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeRentalContractActionPerformed(evt);
            }
        });

        buttonGroup1.add(typeDealerContract);
        typeDealerContract.setText("Dealer");
        typeDealerContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeDealerContractActionPerformed(evt);
            }
        });

        ContractTypeLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ContractTypeLabel2.setText("Minimum refills");

        minRefills.setEnabled(false);

        ContractTypeLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ContractTypeLabel3.setText("Discount rate");

        ContractTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ContractTypeLabel.setText("Additional fee");

        addFee.setEnabled(false);

        discount.setEnabled(false);

        addContract.setBackground(new java.awt.Color(40, 75, 135));
        addContract.setForeground(new java.awt.Color(255, 255, 255));
        addContract.setText("Add Contract");
        addContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContractActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(40, 75, 135));
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addContract, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(typeRentalContract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeDealerContract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ContractTypeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ContractTypeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ContractTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(addFee, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(minRefills, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ContractTypeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contractLink, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contractDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(selectCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contractLink, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contractDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ContractTypeLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeRentalContract)
                    .addComponent(typeDealerContract))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ContractTypeLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minRefills, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ContractTypeLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(ContractTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addContract, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCustomerActionPerformed
        // TODO add your handling code here:
        customerSearch selectCustomer = new customerSearch(new contractRecords(), true,"contracts");
        selectCustomer.setVisible(true);
        selectCustomer.addWindowListener(new WindowAdapter(){
         public void windowClosed(WindowEvent e)
            {
            customerID = "'"+selectCustomer.custID+"'";
            String sql = "SELECT concat(last_name,', ',first_name,' ',middle_name) as name FROM customer WHERE customer_id ="+customerID+";";
            String custName= " ";
            try{
                PreparedStatement pst = con.prepareStatement(sql);
                //pst.executeUpdate();
                ResultSet rs = pst.executeQuery();
                
                while(rs.next()){
                   custName = rs.getString("name");
                }
            }catch(Exception ex){
                    System.out.println("Error: "+ex.getMessage());
            }
             customerName.setText(custName);
            }
        
        });
    }//GEN-LAST:event_selectCustomerActionPerformed

    private void customerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameActionPerformed

    private void typeRentalContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeRentalContractActionPerformed
        // TODO add your handling code here:
        if(typeRentalContract.isSelected()==true){
            minRefills.setEnabled(true);
            addFee.setEnabled(true);
            discount.setEnabled(false);
        }
    }//GEN-LAST:event_typeRentalContractActionPerformed

    private void typeDealerContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeDealerContractActionPerformed
        // TODO add your handling code here:
        if(typeDealerContract.isSelected()==true){
            minRefills.setEnabled(true);
            addFee.setEnabled(false);
            discount.setEnabled(true);
        }
    }//GEN-LAST:event_typeDealerContractActionPerformed

    private void addContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContractActionPerformed
        // TODO add your handling code here:
        //String conLink = "'"+contractLink.getText()+"'";
        
        String conLink = "'"+contractLink.getText()+"'";
        SimpleDateFormat cDate = new SimpleDateFormat("yyyy-MM-dd");
        String conDate = (contractDate.getDate() != null) ? cDate.format(contractDate.getDate()):null;
        int additionalFee = (int) addFee.getValue();
        int minimumRefills = (int) minRefills.getValue();
        int dscount = (int) discount.getValue();
        
        
        String conLinkCheck = "^(https?:\\/\\/)?(drive|docs)\\.google\\.com\\/(?:file\\/d\\/|open\\?id=|forms\\/d\\/e\\/)[a-zA-Z0-9_-]+.*";
        
        boolean isValid=true;
        if(customerName.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Please select an existing customer!","Warning", JOptionPane.INFORMATION_MESSAGE);
                    isValid=false;
        }
        if(!contractLink.getText().matches(conLinkCheck) || contractLink.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Please input a valid link!","Warning", JOptionPane.INFORMATION_MESSAGE);
                    isValid=false;
            }
        if (conDate==null){
                JOptionPane.showMessageDialog(this,"Please input date!","Warning", JOptionPane.INFORMATION_MESSAGE);
                    isValid=false;
            }else{
                conDate ="'" +cDate.format(contractDate.getDate()) + "'";
            }
            // For as long as isValid is false, it will never add to the database
            if(isValid){ 
            try {   
                if (typeRentalContract.isSelected()) {
                    // Rental: Rented items, additional fee
                    String sql = "INSERT INTO rental_contract (customer_id, rental_contract_link, rental_contract_date, minimum_refills, additional_fee) VALUES(" + customerID + ", " + conLink + "," + conDate + "," + minimumRefills + "," + additionalFee + ");";
                    System.out.println("Rental is selected");
                    System.out.println(additionalFee + ", " + conLink);
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
               } else if (typeDealerContract.isSelected()) {
                        // Dealer: Minimum refills, discount
                        String sql = "INSERT INTO dealer_contract (customer_id, dealer_contract_link, dealer_contract_date, discount_rate) VALUES(" + customerID + ", " + conLink + "," + conDate + "," + dscount + ");";
                        System.out.println("Dealer is selected");
                        System.out.println(minimumRefills + ", " + conLink);
                        PreparedStatement pst = con.prepareStatement(sql);
                        pst.executeUpdate();
                    }
                    JOptionPane.showMessageDialog(this, "New Contract Added!", "Message", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    } catch (Exception ex) {
                    System.out.println("Error: " + ex.getMessage());
    }
            }
    }//GEN-LAST:event_addContractActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addContract().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ContractTypeLabel;
    private javax.swing.JLabel ContractTypeLabel1;
    private javax.swing.JLabel ContractTypeLabel2;
    private javax.swing.JLabel ContractTypeLabel3;
    private javax.swing.JButton addContract;
    private javax.swing.JSpinner addFee;
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser contractDate;
    private javax.swing.JTextField contractLink;
    private javax.swing.JTextField customerName;
    private javax.swing.JSpinner discount;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner minRefills;
    private javax.swing.JButton selectCustomer;
    private javax.swing.JRadioButton typeDealerContract;
    private javax.swing.JRadioButton typeRentalContract;
    // End of variables declaration//GEN-END:variables
}
