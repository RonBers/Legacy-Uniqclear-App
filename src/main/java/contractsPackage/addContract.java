/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package contractsPackage;

import connectionSql.mysqlConnection;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import searchPackage.customerSearch;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronjoshual.bersabal
 */
public class addContract extends javax.swing.JDialog {
    rentOut rent = new rentOut(new javax.swing.JFrame(),true);
    /**
     * Creates new form tempAdd
     */
    Connection con = new mysqlConnection().getCon();
    // Setting the value of rentedItemsSelected to rentedItems from rentOut file
    ArrayList<String> rentedItemsSelected = rent.rentedItems;
    public String customerID, customerType;   
    public boolean addedContract;
    public addContract(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
                getContentPane().setBackground(Color.white);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        ContractTypeLabel = new javax.swing.JLabel();
        contractLink = new javax.swing.JTextField();
        addFee = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        discount = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        addContract = new javax.swing.JButton();
        contractDate = new com.toedter.calendar.JDateChooser();
        backButton = new javax.swing.JButton();
        ContractTypeLabel1 = new javax.swing.JLabel();
        typeRentalContract = new javax.swing.JRadioButton();
        typeDealerContract = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        ContractTypeLabel2 = new javax.swing.JLabel();
        minRefills = new javax.swing.JSpinner();
        selectCustomer = new javax.swing.JButton();
        ContractTypeLabel3 = new javax.swing.JLabel();
        customerName = new javax.swing.JTextField();
        rentOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ContractTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ContractTypeLabel.setText("Additional fee");

        contractLink.setMaximumSize(new java.awt.Dimension(68, 26));

        addFee.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setText("Contract Link:");

        discount.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5.setText("Date:");

        addContract.setBackground(new java.awt.Color(40, 75, 135));
        addContract.setForeground(new java.awt.Color(255, 255, 255));
        addContract.setText("Add Contract");
        addContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContractActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(40, 75, 135));
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        ContractTypeLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ContractTypeLabel1.setText("Contract Type");

        typeRentalContract.setText("Rental");
        typeRentalContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeRentalContractActionPerformed(evt);
            }
        });

        typeDealerContract.setText("Dealer");
        typeDealerContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeDealerContractActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(310, 100));

        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uniqclearLogo(header).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header)
                .addGap(0, 78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        ContractTypeLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ContractTypeLabel2.setText("Minimum refills");

        minRefills.setEnabled(false);

        selectCustomer.setBackground(new java.awt.Color(40, 75, 135));
        selectCustomer.setForeground(new java.awt.Color(255, 255, 255));
        selectCustomer.setText("Select Customer");
        selectCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCustomerActionPerformed(evt);
            }
        });

        ContractTypeLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ContractTypeLabel3.setText("Discount rate");

        customerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameActionPerformed(evt);
            }
        });

        rentOut.setText("Rent out");
        rentOut.setEnabled(false);
        rentOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(typeRentalContract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeDealerContract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ContractTypeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ContractTypeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ContractTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(addFee, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(minRefills, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ContractTypeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rentOut, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contractLink, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contractDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addContract, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(selectCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contractLink, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contractDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ContractTypeLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeRentalContract)
                    .addComponent(typeDealerContract))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ContractTypeLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minRefills, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ContractTypeLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ContractTypeLabel)
                    .addComponent(rentOut, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addContract, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContractActionPerformed
        // TODO add your handling code here:
        String conLink = contractLink.getText();
        SimpleDateFormat cDate = new SimpleDateFormat("yyyy-MM-dd");
        String conDate = (contractDate.getDate() != null) ? cDate.format(contractDate.getDate()):null;
        String conLinkCheck = "^(https?:\\/\\/)?(drive|docs)\\.google\\.com\\/(?:file\\/d\\/|open\\?id=|forms\\/d\\/e\\/)[a-zA-Z0-9_-]+.*";
        int additionalFee = (int) addFee.getValue();
        int minimumRefills = (int) minRefills.getValue();
        int dscount = (int) discount.getValue();

        boolean isValid=true;
        if(customerName.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Please select an existing customer!","Warning", JOptionPane.INFORMATION_MESSAGE);
            isValid=false;
        }
        if(!contractLink.getText().matches(conLinkCheck) || contractLink.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Please input a valid link!","Warning", JOptionPane.INFORMATION_MESSAGE);
            isValid=false;
        }else{
            conLink = "'"+contractLink.getText()+"'";
        }
        if (conDate==null){
            JOptionPane.showMessageDialog(this,"Please input date!","Warning", JOptionPane.INFORMATION_MESSAGE);
            isValid=false;
        }
        /*
        
        
        // Checker: Should select rental items if rented contract
        if(rentedItemsSelected.isEmpty() && typeRentalContract.isSelected()){
            System.out.println("Checked: Empty rented items");
            JOptionPane.showMessageDialog(this,"Please select rental items!","Warning", JOptionPane.INFORMATION_MESSAGE);
            isValid=false;
        }
        */
        else{
            conDate ="'" +cDate.format(contractDate.getDate()) + "'";
        }
        // For as long as isValid is false, it will never add to the database
        if(isValid){
            try {
                if (typeRentalContract.isSelected()) {
   
                    // Rental: Rented items, additional fee  
                    String sql = "INSERT INTO rental_contract (customer_id, rental_contract_link, rental_contract_date, minimum_refills, additional_fee) "
                                  + "VALUES(" + customerID + ", " + conLink + "," + conDate + "," + minimumRefills + "," + additionalFee + ");";
                    // For checking
                    System.out.println("Rental is selected");
                    System.out.println(additionalFee + ", " + conLink);
                    
                    // Insert new rental contract
                    PreparedStatement pst = con.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
                    pst.executeUpdate();
                    
                    // Get the generated id
                    ResultSet rs=pst.getGeneratedKeys();
                    int rentalID=0;
                    while(rs.next()){
                        rentalID = rs.getInt(1);
                        System.out.println(rs.getInt(1));
                    }
                    
                    // Update customer type
                    String updateType = "UPDATE customer SET customer_type = 'Rental' WHERE customer_id=" + customerID + "";
                    PreparedStatement pstUpdate = con.prepareStatement(updateType);
                    pstUpdate.executeUpdate();    
                    
                    
                    // Arraylist of rental item id selected
                    int IDitem=0;
                    
                    /*
                    Order page
                    */
                    
                    for(String item: rentedItemsSelected){
                        String[] rentalIDitems = item.substring(1, item.length() - 1).split(", "); // Remove brackets, then split
                        IDitem = Integer.parseInt(rentalIDitems[0]);
                        System.out.println(IDitem);        
                        String rentOut = "INSERT INTO rented_out(rental_contract_id,rental_item_id,order_id,out_datetime) VALUES(?,?,?,NOW())";
                        /* ORDER PAGE OPEN */
                        
                        // One rented_out id
                    try{
                        PreparedStatement pstRentOut = con.prepareStatement(rentOut);
                        pstRentOut.setInt(1,rentalID);
                        pstRentOut.setInt(2,IDitem);
                        pstRentOut.setInt(3,5);
                        pstRentOut.executeUpdate();
                    }catch(Exception e){
                        System.out.println(e.getMessage());
                    }       
                    }
                    JOptionPane.showMessageDialog(this, "Items rented!", "Success", JOptionPane.INFORMATION_MESSAGE);
   
                     
                } else if (typeDealerContract.isSelected()) {
                    // Dealer: Minimum refills, discount
                    String sql = "INSERT INTO dealer_contract (customer_id, dealer_contract_link, dealer_contract_date,minimum_refills, discount_rate) VALUES(" + customerID + ", " + conLink + "," + conDate +", " + minimumRefills + " ," + dscount + ");";
                    System.out.println("Dealer is selected");
                    System.out.println(minimumRefills + ", " + conLink);
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    String updateType = "UPDATE customer SET customer_type = 'Dealer' WHERE customer_id=" + customerID + "";
                    PreparedStatement pstUpdate = con.prepareStatement(updateType);
                    pstUpdate.executeUpdate();
                }
                JOptionPane.showMessageDialog(this, "New Contract Added!", "Message", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (Exception ex) {
                System.out.println("Error: " + ex.getMessage());
            }
            
         //   addedContract = true;
        }
    }//GEN-LAST:event_addContractActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void typeRentalContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeRentalContractActionPerformed
        // TODO add your handling code here:
        if(typeRentalContract.isSelected()==true){
            minRefills.setEnabled(true);
            addFee.setEnabled(true);
            discount.setEnabled(false);
            rentOut.setEnabled(true);
        }
    }//GEN-LAST:event_typeRentalContractActionPerformed

    private void typeDealerContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeDealerContractActionPerformed
        // TODO add your handling code here:
        if(typeDealerContract.isSelected()==true){
            minRefills.setEnabled(true);
            addFee.setEnabled(false);
            discount.setEnabled(true);
            rentOut.setEnabled(false);
        }
    }//GEN-LAST:event_typeDealerContractActionPerformed
    
    private void selectCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCustomerActionPerformed
        // TODO add your handling code here:
        customerSearch selectCustomer = new customerSearch(new contractRecords(), true,"contracts");
        selectCustomer.setVisible(true);
        
        boolean hasContract=true;
        
        // INSERT FUNCTION FOR NO DUPLICATES HERE!!!
        if(!selectCustomer.customerType.equalsIgnoreCase("Regular")){
        JOptionPane.showMessageDialog(selectCustomer, "Customer has a contract already", "Information", JOptionPane.INFORMATION_MESSAGE);
        customerName.setText("");
        selectCustomer.setVisible(true); 
        }else{      
            selectCustomer.addWindowListener(new WindowAdapter(){
            public void windowClosed(WindowEvent e)
            {           
                customerID = selectCustomer.custID;
                rent.cID=Integer.parseInt(customerID); // Set the customer ID to the rentOut page
                String sql = "SELECT concat(last_name,', ',first_name,' ',middle_name) as name FROM customer WHERE customer_id ="+customerID+";";
                String custName= " ";
                try{
                    PreparedStatement pst = con.prepareStatement(sql);
                    //pst.executeUpdate();
                    ResultSet rs = pst.executeQuery();

                    while(rs.next()){
                        custName = rs.getString("name");
                    }
                }catch(Exception ex){
                    System.out.println("Error: "+ex.getMessage());
                }
                customerName.setText(custName);
                }   
        });
        }
    }//GEN-LAST:event_selectCustomerActionPerformed

    private void customerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameActionPerformed

    private void rentOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentOutActionPerformed
        // Insert function for THERE MUST BE A SELECTED CUSTOMER HERE!!!
        rent.rentCustomerName.setText(customerName.getText());
        rent.setVisible(true);
    }//GEN-LAST:event_rentOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                addContract dialog = new addContract(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ContractTypeLabel;
    private javax.swing.JLabel ContractTypeLabel1;
    private javax.swing.JLabel ContractTypeLabel2;
    private javax.swing.JLabel ContractTypeLabel3;
    private javax.swing.JButton addContract;
    private javax.swing.JSpinner addFee;
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser contractDate;
    private javax.swing.JTextField contractLink;
    public javax.swing.JTextField customerName;
    private javax.swing.JSpinner discount;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner minRefills;
    private javax.swing.JButton rentOut;
    private javax.swing.JButton selectCustomer;
    private javax.swing.JRadioButton typeDealerContract;
    private javax.swing.JRadioButton typeRentalContract;
    // End of variables declaration//GEN-END:variables
}
